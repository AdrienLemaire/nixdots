# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, modulesPath, ... }:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  # boot.initrd.availableKernelModules =
  #   [ "xhci_pci" "thunderbolt" "vmd" "nvme" ];
  # boot.initrd.kernelModules = [ ];
  # boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/bf7761a1-df16-45b2-bbe9-737a15da6819";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/46F1-6F0A";
    fsType = "vfat";
    options = [ "fmask=0077" "dmask=0077" ];
  };

  # swapDevices = [
  #   {
  #     device = "/var/lib/swapfile";
  #     size = 32 * 1024; # 32GB in MB
  #   }
  # ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode =
    lib.mkDefault config.hardware.enableRedistributableFirmware;

  #### MODIFIED

  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;
  networking.firewall.allowedUDPPorts = [
    68
    546
    43210
    2757
    2759
    60841
    # nordvpn
    1194
    443
  ];
  # Fix Intel Iris Xe graphics issues
  boot.kernelParams = [ "i915.enable_psr=0" "i915.force_probe=4680"]; # "resume_offset=106506240" ];
  # Fix hibernate
  #boot.resumeDevice = "/dev/disk/by-uuid/bf7761a1-df16-45b2-bbe9-737a15da6819";

  # Perform garbage collection weekly to maintain low disk usage
  nix.gc = {
    automatic = true;
    dates = "weekly";
    options = "--delete-older-than 1w";
  };

  # Optimize storage
  # You can also manually optimize the store via:
  #    nix-store --optimise
  # Refer to the following link for more details:
  # https://nixos.org/manual/nix/stable/command-ref/conf-file.html#conf-auto-optimise-store
  nix.settings.auto-optimise-store = true;
  # Enable the IPU6 drivers for Dell XPS 13 Plus webcam support
  hardware.ipu6 = lib.mkForce {
    enable = true;
    platform = "ipu6ep";
  };

  # Let brightness apply to all monitors with ddcutil
  hardware.i2c.enable = true;

  hardware.enableRedistributableFirmware = lib.mkForce true;

  # Disable PulseAudio in favor of PipeWire
  # hardware.pulseaudio.enable = lib.mkForce false;

  # Add audio modules for XPS 13 Plus to existing modules
  boot.kernelModules =
    [ "snd_soc_rt715_sdca" "snd_sof_pci_intel_tgl" "kvm-intel" ];

  # Add firmware-related modules for webcam
  boot.initrd.availableKernelModules = [
    "i915"
    "usb_storage"
    "usbhid"
    "sd_mod"
    "xhci_pci"
    "thunderbolt"
    "vmd"
    "nvme"
  ];

  powerManagement.cpuFreqGovernor = lib.mkForce "powersave";
  # powerManagement.enable = true;

  security.rtkit.enable = lib.mkForce true;

}

